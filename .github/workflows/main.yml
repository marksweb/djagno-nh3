name: CI

on:
  push:
    branches:
    - main
  pull_request:

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  FORCE_COLOR: "1" # Make tools pretty.
  TOX_TESTENV_PASSENV: FORCE_COLOR
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  PIP_NO_PYTHON_VERSION_WARNING: "1"
  # Keep in sync with .pre-commit-config.yaml/default_language_version/python.
  PYTHON_LATEST: "3.12"

jobs:
  tests:
    name: Python ${{ matrix.python-version }}
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        python-version:
          - '3.10'
          - '3.11'
          - '3.12'

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: 'requirements/*.txt'

      - name: Install dependencies
        run: |
          python -Im pip install --upgrade pip setuptools wheel
          python -Im pip install --upgrade 'tox>=4.7'

      - name: Run tox targets for ${{ matrix.python-version }}
        run: tox run -f py$(echo ${{ matrix.python-version }} | tr -d .)

      - name: Upload coverage data
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data-${{ matrix.python-version }}
          path: '${{ github.workspace }}/.coverage.*'

  coverage:
    name: Coverage
    runs-on: ubuntu-22.04
    needs: tests
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{env.PYTHON_LATEST}}

      - name: Install dependencies
        run: python -Im pip install --upgrade coverage[toml]

      - name: Download data
        uses: actions/download-artifact@v4
        with:
          path: ${{ github.workspace }}
          pattern: coverage-data-*
          merge-multiple: true

      - name: Combine coverage and fail if it's <100%
        run: |
          python -Im coverage combine
          python -Im coverage html --skip-covered --skip-empty
          python -Im coverage report --fail-under=100
          echo "## Coverage summary" >> $GITHUB_STEP_SUMMARY
          python -Im coverage report --format=markdown >> $GITHUB_STEP_SUMMARY

      - name: Upload HTML report
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: html-report
          path: htmlcov
